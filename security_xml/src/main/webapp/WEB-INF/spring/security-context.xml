<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- security 적용하지 않는 패턴설정 -->
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/images/**" security="none" />
	
	<!-- 
	[auto-config="true"] 
	자동 설정 사용 여부
	<form-login/>
	<http-basic/>
	<logout/>
	
	[use-expressions="true"]
	spring EL 표현식 사용 true
	 hasRole
	 hasAnyRole
	 permitAll
	 isAnonymous()
	-->	
	<http auto-config="true" use-expressions="true">
		
		<csrf disabled="false"/>
	
		<!-- 
		*설정시 유의사항
		구체적인 intercept-url을 먼저 적어주고 비교적 덜 구체적인 url을 나중에 설정한다. 
		-->
		<!-- securitu가 감시할 URL과 접근가능한 권한을 설정 -->
		
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		
		<!-- 인증을 받고 권한이 USER 또는 ADMIN 인 상태일 때 true -->
		<intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		
		<!-- 인증을 받고 권한이 GUEST 또는 ADMIN  인 상태일 때 true -->
		<intercept-url pattern="/guest/**" access="hasAnyRole('ROLE_GUEST', 'ROLE_ADMIN')" />

		<!-- isAuthenticated() : 인증을 받은 로그인 상태일 때 true -->
		<intercept-url pattern="/loginSuccess/**" access="isAuthenticated()" />
		
		<!-- isAnonymous() : 인증을 받지 못한 익명의 상태일 때 true -->
		<intercept-url pattern="/login/**" access="isAnonymous()" />

		<!-- permitAll : 권한여부 없이 접근 가능, denyAll : 권한여부 없이 접근 불가능 -->
		<intercept-url pattern="/**" access="permitAll" />
		
		<!-- 
		[parameter]
		default user-name : j_username
		default user-password : j_password
		를 변경하고자 할때 username-parameter, password-parameter 사용
		
		[login-page]
		페이지 권한이 없는 유저가 권한이 필요한 페이지에 접근했을때
		redirect 되는 login-page 를 의미.
		
		[default-target-url]
		로그인에 성공한 경우 이동되는 url 설정
		유저가 로그인 화면을 '직접' 클릭해서 자의적인 로그인을 수행하였을 경우
		
		[always-use-default-target="true"]
		내가 로그인 페이지로 원해서 갔을때나
		인증 권한이 필요한 페이지를 갔는데 권한이 없어서 로그인 페이지로 이동 당했을때나
		상관없이 로그인을 하면 무조건 default-target으로 옮기겠다.
		
		[authentication-failure-url]
		인증을 실패했을 경우 이용되는 url 설정
		 -->
		<form-login
			login-processing-url="/login"
			username-parameter="devyu_username"
			password-parameter="devyu_password"
			login-page="/login"
			default-target-url="/loginSuccess"
			authentication-failure-url="/login?error=fail"/>
		
		<!-- 
		[logout-url]
		로그아웃 url 설정
		
		[logout-success-url]
		로그아웃 후 이동하는 url 설정
		
		[JSESSIONID]
		로그아웃 후 지워야할 세션 ID 값 설정
		
		 -->
		<logout
			logout-url="logout"
			logout-success-url="/"
			delete-cookies="JSESSIONID"	
		/>
	</http>
	
	<!-- manager는 인증에 관정 정보를 설정 -->
	<authentication-manager>
		<!-- provider는 실제 인증을 주관 -->
		<authentication-provider>
			<user-service>
				<!-- {noop} 은 패스워드 인코딩을 하지 않겠다는 의미 -->
				<user name="admin" password="{noop}admin" authorities="ROLE_ADMIN" />
				<user name="user" password="{noop}user" authorities="ROLE_USER" />
				<user name="guest" password="{noop}guest" authorities="ROLE_GUEST" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
